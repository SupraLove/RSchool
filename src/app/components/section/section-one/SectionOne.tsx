"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Checkbox } from "@/components/ui/checkbox";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { Label } from "@/components/ui/label";
import { z } from "zod";
import { formSchema } from "@/zod-schemes/form.zod";
import Image from "next/image";
import Link from "next/link";

const features = [
  "–û–ø–ª–∞—Ç–∞ –ø–æ –æ–¥–Ω–æ–º—É –∑–∞–Ω—è—Ç–∏—é",
  "–û–ø–ª–∞—Ç–∞ –ø–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—É",
  "–û–ø–ª–∞—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É",
];

const contactMethods = [
  { id: "call", label: "–¢–µ–ª–µ—Ñ–æ–Ω" },
  { id: "telegram", label: "Telegram" },
];

type FormData = z.infer<typeof formSchema>;

export function SectionOne() {
  const form = useForm<FormData>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      username: "",
      contactMethod: "call",
      phone: "",
      agree: true,
    },
  });

  async function onSubmit(values: FormData) {
    try {
      const res = await fetch("/api/send", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(values),
      });

      if (res.ok) {
        alert("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
      } else {
        const errorData = await res.json();
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: " + errorData.error);
      }
    } catch (error) {
      alert(`–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ${error}`);
    }
  }

  return (
    <section className="h-[700px] bg-primary-foreground grid grid-cols-2 justify-items-center rounded-lg mx-4">
      {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å ‚Äî —Ç–µ–∫—Å—Ç */}
      <div className="text-center self-center pl-8">
        <p className="text-6xl text-white leading-tight">
          <span className="bg-white/70 rounded-full px-3 text-primary-foreground">
            –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ
          </span>{" "}
          –æ–Ω–ª–∞–π–Ω-–∑–∞–Ω—è—Ç–∏—è —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º <br /> –¥–ª—è 5‚àí11 –∫–ª–∞—Å—Å–æ–≤
        </p>

        <p className="text-2xl text-white mt-7 leading-relaxed">
          –í—ã—è–≤–∏–º –∏ —É—Å—Ç—Ä–∞–Ω–∏–º –ø—Ä–æ–±–µ–ª—ã –∑–∞ –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã <br /> —Å –ø–æ–º–æ—â—å—é{" "}
          <span className="text-white bg-violet-400 rounded-full px-2 mx-1">
            –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
          </span>
          , —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π <br />
          –∏—Å—Ö–æ–¥—è –∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —É—á–µ–Ω–∏–∫–∞
        </p>

        <div className="flex gap-8 mt-7 justify-center">
          {features.map((text, i) => (
            <div
              key={i}
              className="w-36 h-32 bg-white/70 rounded-2xl flex flex-col justify-between text-left p-3"
            >
              <span className="text-xl">ü§ç</span>
              <p className="text-violet-400 font-semibold">{text}</p>
            </div>
          ))}
        </div>
      </div>

      {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å ‚Äî —Ñ–æ—Ä–º–∞ —Å —Ä–∞–∫–µ—Ç–æ–π –≤ –æ–¥–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ */}
      <div className="relative w-[480px] min-h-[480px] self-center bg-background text-black p-6 rounded-xl shadow-around">
        {/* –†–∞–∫–µ—Ç–∞ –∞–±—Å–æ–ª—é—Ç–æ–º –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ñ–æ—Ä–º—ã */}
        <Image
          src="/3d-rocket2.png"
          alt="rocket"
          width={245}
          height={245}
          className="absolute -left-36 -top-19 pointer-events-none select-none"
        />

        <Form {...form}>
          <form
            onSubmit={form.handleSubmit(onSubmit)}
            className="space-y-6 relative z-10"
          >
            <div>
              <h2 className="text-2xl font-semibold text-center">
                –ó–∞–ø–∏—Å–∞—Ç—å—Å—è{" "}
                <span className="text-primary-foreground">
                  –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ
                </span>
              </h2>
              <p className="text-md text-muted-foreground mt-1 text-center">
                –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –∏ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º
              </p>
            </div>

            <FormField
              control={form.control}
              name="username"
              render={({ field }) => (
                <FormItem>
                  <FormControl>
                    <Input placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" {...field} />
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />

            <div className="gap-2 flex flex-col">
              {" "}
              <FormField
                control={form.control}
                name="contactMethod"
                render={({ field }) => (
                  <div className="flex gap-2">
                    {contactMethods.map((method) => (
                      <button
                        key={method.id}
                        type="button"
                        onClick={() => field.onChange(method.id)}
                        className={`px-3 py-1 rounded-full border text-sm ${
                          field.value === method.id
                            ? "bg-black text-white"
                            : "bg-white text-black border-gray-300"
                        }`}
                      >
                        {method.label}
                      </button>
                    ))}
                  </div>
                )}
              />
              <FormField
                control={form.control}
                name="phone"
                render={({ field }) => {
                  const method = form.watch("contactMethod");
                  const placeholder =
                    method === "telegram" ? "@username" : "+7 (999) 999-99-99";

                  return (
                    <FormItem>
                      <FormControl>
                        <Input
                          {...field}
                          placeholder={placeholder}
                          type="text"
                          className="h-12"
                        />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  );
                }}
              />
            </div>

            <Button type="submit" className="w-full" variant="default">
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </Button>
            <FormField
              control={form.control}
              name="agree"
              render={({ field }) => (
                <FormItem className="flex flex-col  gap-2 h-full">
                  <div className="flex justify-center items-center gap-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                        id="agree"
                      />
                    </FormControl>

                    <Label
                      htmlFor="agree"
                      className="block flex-1 w-full text-sm leading-snug whitespace-normal break-words text-black/70"
                    >
                      –°–æ–≥–ª–∞—à–∞—é—Å—å —Å{" "}
                      <Link
                        href="/privacy/1"
                        className="underline text-blue-600"
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        –æ—Ñ–µ—Ä—Ç–æ–π{" "}
                      </Link>
                      ,
                      <Link
                        href="/privacy/1"
                        className="underline text-blue-600"
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                      </Link>{" "}
                      –∏ –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞{" "}
                      <Link
                        href="/privacy/1"
                        className="underline text-blue-600"
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                      </Link>
                    </Label>
                  </div>

                  <FormMessage className="ml-6" />
                </FormItem>
              )}
            />
          </form>
        </Form>
      </div>
    </section>
  );
}
